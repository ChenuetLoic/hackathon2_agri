{% extends 'base.html.twig' %}
 {% block stylesheets %}
     {{ parent() }}
     <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
           integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
           crossorigin=""/>
 {% endblock %}
{% block body %}
    <div id="page-wrapper">
        <div id="title"></div>
    </div>
    <div id="btn">
        <div id='top'></div>
        <div id='middle'></div>
        <div id='bottom'></div>
    </div>
    <div id="box">
        <div id="items">
            <div class="item">Item 1</div>
            <div class="item">Item 2</div>
            <div class="item">Item 3</div>
            <div class="item">Item 4</div>
            <div class="item">Item 5</div>
        </div>
    </div>
    <div id="map" style="height: 100vh;">
    </div>
    <title>Carte</title>
    <div class="legend">
        <p class="farmers">Agriculteurs</p>
        <p class="buyers">Acheteurs</p>
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
            integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
            crossorigin=""></script>
    <script src="https://cdn.jsdelivr.net/npm/leaflet.locatecontrol@0.72.0/dist/L.Control.Locate.min.js"
            charset="utf-8"></script>
    <script type='text/javascript'
            src='https://unpkg.com/leaflet.markercluster@1.3.0/dist/leaflet.markercluster.js'></script>
    <script src="https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.js"></script>
    <script>
        let lat = 47.878264;
        let lon = 1.9258559;
        let macarte = null;
        let markerClusters;
        let farmersLocation = [];
        let buyersLocation = [];
        {% for city in cities %}
            farmersLocation.push([
                "{{ city.city }}",
                {{ city.latitude }},
                {{ city.longitude }},
                "{{ city.quantitySold }}",
                "{{ city.category }}",
                "{{ city.farmSize }}",
                {{ city.registerYear }}
            ]);
        {% endfor %}
        {% for buyer in buyers %}
        buyersLocation.push(["{{ buyer.city }}", {{ buyer.latitude }}, {{ buyer.longitude }}]);
        {% endfor %}
        function initMap() {
            let iconBase = '{{ asset('/build/images/') }}';
            macarte = L.map('map').setView([lat, lon], 6);
            markerClusters = L.markerClusterGroup();
            L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
                attribution: 'données © <a href="//osm.org/copyright">OpenStreetMap</a>/ODbL - rendu <a href="//openstreetmap.fr">OSM France</a>',
                minZoom: 5,
                maxZoom: 18
            }).addTo(macarte);
            for (let i = 0; i < farmersLocation.length; i++) {
                let greenIcon = L.icon({
                    iconUrl: iconBase + 'markerGreen.58300f49.png',
                    iconSize: [40, 40], // size of the icon
                    iconAnchor: [22, 94], // point of the icon which will correspond to marker's location
                    popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor
                });
                let farmersMarker = L.marker([farmersLocation[i][1], farmersLocation[i][2]], {icon: greenIcon});
                farmersMarker.bindPopup('<p><b>Nous fait confiance depuis ' +farmersLocation[i][6].toString()+ '</b></p><p> <span class="header-font">Exploitation : </span><b>' +farmersLocation[i][5]+ ' Ha</b></p><p class=""> <span class="header-font">Produits : </span><b>' +farmersLocation[i][4]+ '</b></p><p> <span class="header-font">A vendu </span><b>' +farmersLocation[i][3]+ '</b> <span class="header-font">tonnes de céréales</span></p>')
                markerClusters.addLayer(farmersMarker);
            }

            for (let i = 0; i < buyersLocation.length; i++) {
                let orangeIcon = L.icon({
                    iconUrl: iconBase + 'markerOrange.e34b5cfb.png',
                    iconSize: [40, 40], // size of the icon
                    iconAnchor: [22, 94], // point of the icon which will correspond to marker's location
                    popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor
                });
                let buyersMarker = L.marker([buyersLocation[i][1], buyersLocation[i][2]], {icon: orangeIcon});
                buyersMarker.bindPopup(buyersLocation[i][0])
                markerClusters.addLayer(buyersMarker);
            }
            macarte.addLayer(markerClusters);
            //search
            macarte.addControl(new L.Control.Search({
                url: 'https://nominatim.openstreetmap.org/search?format=json&q={s}',
                jsonpParam: 'json_callback',
                propertyName: 'display_name',
                propertyLoc: ['lat', 'lon'],
                marker: L.circleMarker([0, 0], {radius: 30}),
                autoCollapse: true,
                autoType: false,
                minLength: 2,
            }));
        }

        window.onload = function () {
            initMap();
            //Geolocation
            let lc = L.control.locate({
                strings: {
                    title: "Géolocalisation"
                },
                locateOptions: {
                    maxZoom: 12
                }
            }).addTo(macarte);
        };
    </script>
{% endblock %}
